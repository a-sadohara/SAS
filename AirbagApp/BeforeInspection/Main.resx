<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picKensaWay_Front.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="picKensaWay_Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>